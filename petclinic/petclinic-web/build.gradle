/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds/
 */

 buildscript {
	ext {
		springBootVersion = '2.0.4.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

group = 'be.heh.petclinic'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


ext {
	springCloudVersion = 'Finchley.SR1'
}

dependencies {
	compile('org.springframework.boot:spring-boot-starter-web')
	//compile('org.springframework.security.oauth:spring-security-oauth2')
	//compile('org.springframework.cloud:spring-cloud-starter-security')
	//runtime('org.springframework.boot:spring-boot-devtools')
	//runtime('mysql:mysql-connector-java')

	compile project(':petclinic-core')

	testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

sourceSets {

  main{
      java {
          srcDirs = ['src']
      }
	  resources {
		  srcDirs = ['src/resources']
	  }
  }  
	//compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
	//runtimeClasspath += output + compileClasspath
	}

